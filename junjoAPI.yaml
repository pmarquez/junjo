openapi: 3.0.0
info:
  title: junjoAPI
  version: '1.0'
  contact:
    name: Paulo MÃ¡rquez Herrero
    url: pmarquezh.info
    email: me@pmarquezh.info
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0'
  description: junjo API 1.0 complete enough for the MVP.
servers:
  - url: 'http://localhost:8100'
    description: Local
  - url: 'http://172.18.0.100:8100'
    description: Docker Network
paths:
  /junjoAPI/1.0/sequences:
    post:
      summary: ''
      operationId: post-1.0-sequences
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
                format: uuid
              description: Location of the newly created resource
        '400':
          description: Bad Request
      description: Creates a new sequence in storage.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SequenceRec'
            examples:
              example-1:
                value:
                  sequenceName: SKUs
                  format: '{AAA}-{NNNN}'
                  currentNumericSequence: 0
                  currentAlphaSequence: 0
                  currentAlphaRepresentation: AAA
                  priorityType: numeric
        description: SequenceRec with the initial data.
    parameters: []
    get:
      summary: ''
      operationId: get-junjoAPI-1.0-sequences
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SequenceRec'
        '404':
          description: Nothing Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SequenceRec'
      description: Retrieves all sequence definitions in storage.
  '/junjoAPI/1.0/sequences/{sequenceId}':
    parameters:
      - schema:
          type: string
        name: sequenceId
        in: path
        required: true
        description: Id of the sequence to operate on
    get:
      summary: sequences
      operationId: get-1.0-sequences
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SequenceRec'
            application/xml:
              schema:
                $ref: '#/components/schemas/SequenceRec'
        '404':
          description: Not Found
      description: Retrieves the SequenceRec identified by sequenceId
    delete:
      summary: ''
      operationId: delete-1.0-sequences-sequenceId
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
      description: Deletes a record identified by sequenceId
      parameters:
        - schema:
            type: string
            format: uuid
          in: query
          name: sequenceId
          description: The ID of the sequence to delete
    put:
      summary: ''
      operationId: put-1.0-sequences-sequenceId
      responses:
        '204':
          description: 'All OK, record updated (or created)'
        '400':
          description: 'Bad Request, wrong data supplied.'
      description: Updates a SequenceRec
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SequenceRec'
          application/xml:
            schema:
              type: object
              properties: {}
          multipart/form-data:
            schema:
              type: object
              properties: {}
          text/html:
            schema:
              type: object
              properties: {}
        description: Data to update the record identified by the parameter "sequenceId"
      parameters:
        - schema:
            type: string
            format: uuid
          in: query
          name: sequenceId
          description: The ID of the sequence to update
          required: true
  '/junjoAPI/1.0/sequences/generate/{sequenceId}':
    parameters:
      - schema:
          type: string
        name: sequenceId
        in: path
        required: true
        description: The ID of the Sequence to use
    get:
      summary: Generate Next Element in Sequence
      tags: []
      responses:
        '200':
          description: Request processed OK
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                $ref: '#/components/schemas/SequenceRec'
        '404':
          description: Not Found
      operationId: get-1.0-sequences-generate-sequenceId
      description: Generates and returns a String containing the next element in the sequence represented by sequenceId.
      parameters:
        - schema:
            type: string
          in: query
          name: sequenceId
          description: The Id of the sequence to retrieve
  '/junjoAPI/1.0/sequences/generate/{sequenceId}/{quantity}':
    parameters:
      - schema:
          type: string
        name: sequenceId
        in: path
        required: true
      - schema:
          type: string
        name: quantity
        in: path
        required: true
    get:
      summary: 'Generate Next {quantity} Elements in Sequence'
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '404':
          description: Not Found
      operationId: get-1.0-sequences-generate-sequenceId-quantity
      description: Generates a series of elements instead of only the next one in line.
components:
  schemas:
    SequenceRec:
      title: SequenceRec
      type: object
      description: Keeps the stored state of a sequence.
      x-examples:
        Sequence already in use:
          id: 78ebab54-884d-11ec-a8a3-0242ac120002
          sequenceName: SKUs
          format: '{AAA}-{NNNN}'
          currentNumericSequence: 149
          currentAlphaSequence: 7062
          currentAlphaRepresentation: JKQ
          priorityType: numeric
        New Sequence:
          id: 78ebab52-884d-11ec-a8a3-0242ac120002
          sequenceName: SKUs
          format: '{AA}-{NNNN}'
          currentNumericSequence: 0
          currentAlphaSequence: 0
          currentAlphaRepresentation: ''
          priorityType: numeric
      properties:
        id:
          type: string
        sequenceName:
          type: string
        format:
          type: string
        currentNumericSequence:
          type: integer
        currentAlphaSequence:
          type: integer
        currentAlphaRepresentation:
          type: string
        priorityType:
          type: string
          description: 'Priority Type can be either numeric or alpha. If numeric, then the numeric part of the sequence will get exhausted and rolled-over, before the alpha part increases, if alpha, well, then it is the other way around.'
      required:
        - id
        - sequenceName
        - format
        - currentNumericSequence
        - currentAlphaSequence
        - priorityType
